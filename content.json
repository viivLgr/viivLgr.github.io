[{"title":"css 每天一练之模拟单选按钮","date":"2017-05-10T03:30:40.000Z","path":"2017/05/10/css每日一练之模拟单选按钮/","text":"html结构123456789101112131415161718&lt;ul class=&quot;radioes&quot;&gt; &lt;li&gt; &lt;input type=&quot;radio&quot; name=&quot;radio&quot; id=&quot;radio1&quot; checked&gt; &lt;label for=&quot;radio1&quot;&gt;&lt;/label&gt; &lt;/li&gt; &lt;li&gt; &lt;input type=&quot;radio&quot; name=&quot;radio&quot; id=&quot;radio2&quot;&gt; &lt;label for=&quot;radio2&quot;&gt;&lt;/label&gt; &lt;/li&gt; &lt;li&gt; &lt;input type=&quot;radio&quot; name=&quot;radio&quot; id=&quot;radio3&quot;&gt; &lt;label for=&quot;radio3&quot;&gt;&lt;/label&gt; &lt;/li&gt; &lt;li&gt; &lt;input type=&quot;radio&quot; name=&quot;radio&quot; id=&quot;radio4&quot;&gt; &lt;label for=&quot;radio4&quot;&gt;&lt;/label&gt; &lt;/li&gt;&lt;/ul&gt; css样式1234567891011121314151617181920212223242526272829303132333435363738394041ul,li&#123; list-style: none; margin: 0; padding: 0;&#125;.radioes&#123; margin: 100px auto;&#125;.radioes li&#123; float: left; margin: 0 10px;&#125;.radioes input&#123; display: none;&#125;.radioes label&#123; display: block; width: 100px; height: 50px; background-color: #ccc; border-radius: 50px; position: relative; transition: all ease .5s;&#125;.radioes label:after&#123; content: &apos;&apos;; width: 48px; height: 48px; background-color: #fff; border-radius: 50%; position: absolute; left: 0; top: 1px; transition: all ease .5s;&#125;.radioes input:checked + label:after&#123; left: 50px;&#125;.radioes input:checked + label&#123; background-color: #4ace55;&#125; 欢迎访问我的简书，同步发布感谢阅读，如有错误欢迎指正。","tags":[{"name":"每日一练","slug":"每日一练","permalink":"http://viivlgr.github.io/tags/每日一练/"}]},{"title":"css 每天一练之一个标签实现box左边竖线","date":"2017-05-09T02:56:40.000Z","path":"2017/05/09/css每日一练之一个标签实现box左边竖线/","text":"htm结构123456&lt;div class=&quot;box1&quot;&gt;&lt;/div&gt;&lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;&lt;div class=&quot;box3&quot;&gt;&lt;/div&gt;&lt;div class=&quot;box4&quot;&gt;&lt;/div&gt;&lt;div class=&quot;box5&quot;&gt;&lt;/div&gt;&lt;div class=&quot;box6&quot;&gt;&lt;/div&gt; css样式12345678910111213141516171819202122232425262728293031323334div&#123; width: 200px; height: 50px; background-color: #15b9d4; margin: 20px auto; box-sizing: border-box;&#125;.box1&#123; border-left: 5px solid #000;&#125;.box2&#123; box-shadow: inset 5px 0 0 0 #000;&#125;.box3&#123; box-shadow: -5px 0 0 0 #000;&#125;.box4&#123; background-image: linear-gradient(90deg,#000000 5px, transparent 5px);&#125;.box5&#123; filter: drop-shadow(-5px 0 0 #000);&#125;.box6&#123; position: relative;&#125;.box6:after&#123; content: &apos;&apos;; width: 5px; height: 50px; position: absolute; left: 0; top: 0; background-color: #000;&#125; 欢迎访问我的简书，同步发布感谢阅读，如有错误欢迎指正。","tags":[{"name":"每日一练","slug":"每日一练","permalink":"http://viivlgr.github.io/tags/每日一练/"}]},{"title":"查看本地IP","date":"2017-05-09T02:02:40.000Z","path":"2017/05/09/查看本地IP/","text":"windows输入ipconfig回车即可1$ ipconfig mac版本（略有些长啊）1$ ifconfig | grep &quot;inet &quot; | grep -v 127.0.0.1 从截图可以看出我之前一直是用window系统的，刚开始接触mac，记录一下咯。 还有另外一种方式，点击左上角的🍎，然后找到系统偏好设置，找到网络，选择高级，选择TCP/IP，就能看到啦。","tags":[{"name":"IP","slug":"IP","permalink":"http://viivlgr.github.io/tags/IP/"}]},{"title":"不使用循环生成数组","date":"2017-05-06T12:39:40.000Z","path":"2017/05/06/不使用循环生成数组/","text":"记一次面试，不使用循环生成100位数组 传统的方法生成数组12345678910111213// 方法1var arr = new Array(10);for(var i = 0; i &lt; arr.length; i++)&#123; arr[i] = i;&#125;console.log(arr);// 方法2var arr = [];for(var i = 0; i &lt; 10; i++)&#123; arr.push(i);&#125;console.log(i); 第一种不使用循环生成数组的方式 使用 Array.apply(null,{length:10})生成10位的数组，每个值为undefined然后再使用Object.keys()方法获取数组中每个数据的key值，注意这里的值都是字符串，需要处理为number格式 123456789101112131415// 生成100位数组var arr = Array.apply(null,&#123;length: 100&#125;);// 获取数组的字符串key值arr = Object.keys(arr);// 将字符串遍历为numberarr = arr.map(function(item)&#123; return +item;&#125;)// 总体的写法为var arr = Object.keys(Array.apply(null,&#123;length: 100&#125;)).map(function(item)&#123; return +item;&#125;) 第二种不使用循环生成数组的方式es6的Array.from() 参考：Array.from 12Array.from(&#123;length: 100&#125;, (v, i) =&gt; i );// [0,1,2,3....99]; es6的Array.prototype.keys()，keys()方法返回一个新的Array Iterator，它包含数组中每个索引的键。参考Array.prototype.keys()123var arr = new Array(100).keys();console.log(Array.from(arr));//[0,1,2,3....99];","tags":[{"name":"数组","slug":"数组","permalink":"http://viivlgr.github.io/tags/数组/"}]},{"title":"mac 安装MySQL","date":"2017-05-06T02:59:45.000Z","path":"2017/05/06/mac-安装MySQL/","text":"参考： Mac下安装mysql5.7 完整步骤（图文详解） 下载MySQL官网下载 点进去之后，你会看到两个大大的按钮，登录和注册。如果你不想做这些繁琐的动作，别急，看下图红框圈中的文字，点击就可以直接下载了。(我忘记截图了，拿的原文中的图) 安装MySQL下载完成后，点击安装，看到其中一步，MySQL会分配一个随机密码，记得保存这个密码，不要只截图，而是复制出来，因为密码有点复杂。。。 一路确认，等待安装成功。 启动MySQL点击系统偏好设置，选择MySQL 点击 start mysql server 运行MySQL 运行之后红色的点会变成绿色 命令行运行在command+空格输入terminal.app 打开命令行，首先运行下面两条命令：12alias mysql=/usr/local/mysql/bin/mysqlalias mysqladmin=/usr/local/mysql/bin/mysqladmin 这两条命令是为了方便直接打开 termina 就可以运行mysql命令，而不是必须进入mysql安装目录才能运行。接下来，你要做的是重置密码 重置密码命令:1mysqladmin -u root -p password newpass newpass 是你的新密码运行重置密码的命令后，系统提示输入旧密码。 旧密码就是之前安装过程中保存出来的随机密码。如果当时忘记保存了，也可以查看右侧通知栏输入临时密码，密码修改成功，然后用新密码登录：1mysql -u root -p 回车，新密码，回车，登录成功！现在你可以写你的sql命令了！","tags":[{"name":"安装","slug":"安装","permalink":"http://viivlgr.github.io/tags/安装/"}]},{"title":"velocity的macro","date":"2017-05-05T02:30:34.000Z","path":"2017/05/05/velocity分页/","text":"velocity的macro，包括分页、拼接URL等。 分页1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192##分页控制器 ##pageRedirctUrl:$pageRedirctUrl=&quot;itemLoveList.do?category=$!&#123;category&#125;&amp;currPageIndex=&quot; ##pageCount 总页数 ##currPageIndex 当前页#macro(pager $pageRedirctUrl,$pageCount,$currPageIndex) #set($nextPage=$!currPageIndex+1) #if($!currPageIndex==$!pageCount) #set($nextPage=$!pageCount) #end #set($prePage=$!currPageIndex+(-1)) #if($!currPageIndex==1) #set($prePage=1) #end #set($firstPage=&quot;#addUrlParam($pageRedirctUrl,&apos;page&apos;, 1)&quot;) #set($secondPage=&quot;#addUrlParam($pageRedirctUrl,&apos;page&apos;, 2)&quot;) #set($lastPage=&quot;#addUrlParam($pageRedirctUrl, &apos;page&apos;,$pageCount)&quot;) #set($prePage=&quot;#addUrlParam($pageRedirctUrl,&apos;page&apos;, $prePage)&quot;) #set($nextPage=&quot;#addUrlParam($pageRedirctUrl,&apos;page&apos;,$nextPage)&quot;) #set($endPage=&quot;#addUrlParam($pageRedirctUrl,&apos;page&apos;, $pageCount)&quot;) #if($pageCount&gt;1) &lt;div class=&quot;dataTables_paginate paging_bootstrap pagination&quot;&gt; &lt;ul&gt; #if($currPageIndex != 1) &lt;li class=&quot;prev &quot;&gt;&lt;a href=&quot;$prePage&quot;&gt;← 上一页&lt;/a&gt;&lt;/li&gt; #else &lt;li class=&quot;prev disabled&quot;&gt;&lt;a href=&quot;#&quot;&gt;← 上一页&lt;/a&gt;&lt;/li&gt; #end #if($pageCount &gt;=9) #if($!&#123;currPageIndex&#125; !=1) &lt;li&gt;&lt;a href=&quot;$!&#123;firstPage&#125;&quot;&gt;1&lt;/a&gt;&lt;/li&gt; #else &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;1&lt;/a&gt;&lt;/li&gt; #end #if($!&#123;currPageIndex&#125; !=2) &lt;li&gt;&lt;a href=&quot;$!&#123;secondPage&#125;&quot;&gt;2&lt;/a&gt;&lt;/li&gt; #else &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;2&lt;/a&gt;&lt;/li&gt; #end #end #if($&#123;currPageIndex&#125; &gt; $!&#123;pageCount&#125;) #set($&#123;currPageIndex&#125; = $!&#123;pageCount&#125;) #end #if($!&#123;currPageIndex&#125;&gt;0) #if($!&#123;pageCount&#125; &lt;=8) #set($pageStart =1) #set($pageEnd = $!&#123;pageCount&#125; - 1) #else #if($!&#123;pageCount&#125; - $!&#123;currPageIndex&#125;&lt;=3) &lt;li&gt;&lt;a href=&quot;#&quot;&gt;...&lt;/a&gt;&lt;/li&gt; #set($pageStart =$currPageIndex - 2) #set($pageEnd = $!&#123;pageCount&#125; - 1) #else #if($!&#123;currPageIndex&#125;&gt;=10) &lt;li&gt;&lt;a href=&quot;#&quot;&gt;...&lt;/a&gt;&lt;/li&gt; #set($pageStart =$currPageIndex - 3) #set($pageEnd =$currPageIndex + 2) #if($&#123;pageEnd&#125; &gt; $!&#123;pageCount&#125;) #set($&#123;pageEnd&#125; = $!&#123;pageCount&#125;) #end #set($afterApo = 1) #else #set($pageStart =3) #set($pageEnd =$!&#123;currPageIndex&#125;+2) #set($afterApo = 1) #end #end #end #foreach($id in [$&#123;pageStart&#125;..$&#123;pageEnd&#125;]) #if($!id==$!currPageIndex) &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;$!&#123;id&#125;&lt;/a&gt;&lt;/li&gt; #else &lt;li&gt;&lt;a href=&quot;#addUrlParam($pageRedirctUrl,&apos;page&apos;,$!&#123;id&#125;)&quot;&gt;$!&#123;id&#125;&lt;/a&gt;&lt;/li&gt; #end #end #end #if($!&#123;pageCount&#125;&gt;1)#if($afterApo)&lt;li&gt;&lt;a href=&quot;#&quot;&gt;...&lt;/a&gt;&lt;/li&gt;#end #if($!pageCount!=$!currPageIndex) &lt;li&gt;&lt;a href=&quot;$!&#123;endPage&#125;&quot;&gt;$!&#123;pageCount&#125;&lt;/a&gt;&lt;/li&gt; &lt;li class=&quot;next&quot;&gt;&lt;a href=&quot;$!&#123;nextPage&#125;&quot;&gt;下一页 → &lt;/a&gt;&lt;/li&gt; #else &lt;li&gt;&lt;a href=&quot;#&quot;&gt;$!&#123;currPageIndex&#125;&lt;/a&gt;&lt;/li&gt; #end #end &lt;/ul&gt; &lt;/div&gt;#end#end 计算页码12345678910111213##计算页码 $totalNum总数 $pageNum每页的页数#macro(calcuPage $totalNum,$pageNum) #if($!&#123;totalNum&#125; &amp;&amp; $!&#123;pageNum&#125;) #if($totalNum == 0) 1 #else #set($result = ($totalNum - 1) / $pageNum + 1) $result #end #else 1 #end#end 拼凑url参数的宏123456789#macro(addUrlParam $url, $paramName, $paramValue) #if($!&#123;url&#125; &amp;&amp; $!&#123;paramName&#125; &amp;&amp; $!&#123;paramValue&#125;) #set($separator = &quot;&amp;&quot;) #if($!&#123;url.indexOf(&quot;?&quot;)&#125; == -1) #set($separator = &quot;?&quot;) #end $url$separator$paramName=$!&#123;paramValue&#125; #end#end 分解url参数的宏1234567891011121314151617#macro(removeUrlParam $url, $paramName, $paramValue) #if($!&#123;url&#125; &amp;&amp; $!&#123;paramName&#125; &amp;&amp; $!&#123;paramValue&#125;) #set($beReplace=$!&#123;paramName&#125;+&quot;=&quot;+$!&#123;paramValue&#125;) #set($url=$!&#123;url.replace($!&#123;beReplace&#125;,&quot;&quot;)&#125;) #set($url = $url.replace(&quot;&amp;&amp;&quot;, &quot;&amp;&quot;)) #set($url = $!&#123;url.replace(&quot;?&amp;&quot;, &quot;?&quot;)&#125;) #if($url.endsWith(&quot;?&quot;)) #set($url = $!&#123;url.replace(&quot;?&quot;, &quot;&quot;)&#125;) #end #set($url = $!&#123;url.replaceAll(&quot; &quot;,&quot;&quot;)&#125;) #set($url = $!&#123;url.replaceAl(&quot; &quot;,&quot;&quot;)&#125;) #if($!&#123;url.endsWith(&quot;&amp;&quot;)&#125;) #set($url = $!&#123;url.substring(0,$!&#123;url.lastIndexOf(&quot;&amp;&quot;)&#125;)&#125;) #end $url #end #end 在URL中添加查询参数1234567891011121314151617181920212223#macro(addQueryParam $url,$paramValue) #if($!&#123;url&#125;) #if($!&#123;url.indexOf(&quot;?&quot;)&#125;&lt;0) $!&#123;url&#125;?q=$paramValue #else #set($qIndex=$!&#123;url.indexOf(&quot;q=&quot;)&#125;) #if($!&#123;qIndex&#125;&lt;0) $!&#123;url&#125;&amp;q=$!&#123;paramValue&#125; #else #set($beforeStr = $!&#123;url.substring(0,$!&#123;qIndex&#125;)&#125;) #set($afterStr = $!&#123;url.substring($!&#123;qIndex&#125;, $!&#123;url.length()&#125;)&#125;) #set($index=$!&#123;afterStr.indexOf(&quot;&amp;&quot;)&#125;) #if ($!&#123;index&#125;&lt;0) $&#123;url&#125;,$!&#123;paramValue&#125; #else #set($beforeStr1=$!&#123;afterStr.substring(0,$!&#123;index&#125;)&#125;) #set($afterStr1 = $!&#123;afterStr.substring($!&#123;index&#125;, $!&#123;afterStr.length()&#125;)&#125;) $!&#123;beforeStr&#125;$!&#123;beforeStr1&#125;,$!&#123;paramValue&#125;$!&#123;afterStr1&#125; #end #end #end #end#end 删除URL中的查询参数123456789101112131415161718192021#macro(removeQueryParam $url,$paramValue) #if($!&#123;url&#125;) #if($!&#123;url.contains(&quot;,$!&#123;paramValue&#125;&quot;)&#125;) $!&#123;url.replace(&quot;,$!&#123;paramValue&#125;&quot;, &quot;&quot;)&#125; #elseif($!&#123;url.contains(&quot;$!&#123;paramValue&#125;,&quot;)&#125;) $!&#123;url.replace(&quot;$!&#123;paramValue&#125;,&quot;, &quot;&quot;)&#125; #elseif($!&#123;url.contains(&quot;q=$!&#123;paramValue&#125;&quot;)&#125;) #set($str=$!&#123;url.replace(&quot;q=$!&#123;paramValue&#125;&quot;,&quot;&quot;)&#125;) #if($!&#123;str.contains(&quot;?&amp;&quot;)&#125;) #set($str=$!&#123;str.replace(&quot;?&amp;&quot;,&quot;?&quot;)&#125;) #elseif($!&#123;str.contains(&quot;&amp;&amp;&quot;)&#125;) #set($str=$!&#123;str.replace(&quot;&amp;&amp;&quot;,&quot;&amp;&quot;)&#125;) #elseif($!&#123;str.endsWith(&quot;?&quot;)&#125;) #set($str = $!&#123;str.substring(0,$!&#123;str.lastIndexOf(&quot;?&quot;)&#125;)&#125;) #elseif($!&#123;str.endsWith(&quot;&amp;&quot;)&#125;) #set($str = $!&#123;str.substring(0,$!&#123;str.lastIndexOf(&quot;&amp;&quot;)&#125;)&#125;) #end $!&#123;str&#125; #end #end#end 初始化URL123456789#macro(initUrl $url) #if($!&#123;url&#125;) #if($!&#123;url.endsWith(&quot;?&quot;)&#125;) #set($url = $!&#123;url.replace(&quot;?&quot;, &quot;&quot;)&#125;) #end #set($url = $!&#123;url.replace(&quot;?&amp;&quot;, &quot;?&quot;)&#125;) $url #end#end 将数字格式化123#macro(discountFormat $discount) $number.format(&apos;#0.0&apos;,$discount)#end double类型小数点控制到后两位123#macro(numFormat $num) $number.format(&apos;#0.00&apos;,$num)#end 文本长度控制,由于是字符串123456789101112131415##文本长度控制,由于是字符串 ##str 需要长度控制的字符串 ##maxLength 截取的最大长度 ##subfix 后缀#macro(previewText $str,$maxLength,$subfix) #if(!$!&#123;str&#125;||!$!&#123;maxLength&#125;||!$!&#123;subfix&#125;) ##是空则不执行 #else #if($&#123;str.length()&#125;&gt;$&#123;maxLength&#125;) $!&#123;str.substring(0,$&#123;maxLength&#125;)&#125;$!&#123;subfix&#125; #else $!&#123;str&#125; #end #end#end 格式化时间戳123#macro(formatTime $timestamp) $timestamp.toString().substring(0,19)#end 将地区代码转换成对应的中文1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768##将地区代码转换成对应的中文#macro(transAreaCode $areaCode) #if($!&#123;areaCode&#125;) #if($areaCode == &quot;340000&quot;) 安徽 #elseif($areaCode == &quot;110000&quot;) 北京 #elseif($areaCode == &quot;350000&quot;) 福建 #elseif($areaCode == &quot;620000&quot;) 甘肃 #elseif($areaCode == &quot;440000&quot;) 广东 #elseif($areaCode == &quot;450000&quot;) 广西 #elseif($areaCode == &quot;520000&quot;) 贵州 #elseif($areaCode == &quot;460000&quot;) 海南 #elseif($areaCode == &quot;130000&quot;) 河北 #elseif($areaCode == &quot;410000&quot;) 河南 #elseif($areaCode == &quot;230000&quot;) 黑龙江 #elseif($areaCode == &quot;420000&quot;) 湖北 #elseif($areaCode == &quot;430000&quot;) 湖南 #elseif($areaCode == &quot;220000&quot;) 吉林 #elseif($areaCode == &quot;320000&quot;) 江苏 #elseif($areaCode == &quot;360000&quot;) 江西 #elseif($areaCode == &quot;210000&quot;) 辽宁 #elseif($areaCode == &quot;150000&quot;) 内蒙古 #elseif($areaCode == &quot;640000&quot;) 宁夏 #elseif($areaCode == &quot;630000&quot;) 青海 #elseif($areaCode == &quot;370000&quot;) 山东 #elseif($areaCode == &quot;140000&quot;) 山西 #elseif($areaCode == &quot;610000&quot;) 陕西 #elseif($areaCode == &quot;310000&quot;) 上海 #elseif($areaCode == &quot;510000&quot;) 四川 #elseif($areaCode == &quot;120000&quot;) 天津 #elseif($areaCode == &quot;540000&quot;) 西藏 #elseif($areaCode == &quot;650000&quot;) 新疆 #elseif($areaCode == &quot;530000&quot;) 云南 #elseif($areaCode == &quot;330000&quot;) 浙江 #elseif($areaCode == &quot;500000&quot;) 重庆 #end #end#end 计算分润123456789## $totalAmount## $userRate## $superiorRate #macro(calcuBenefit $totalAmount,$userRate,$superiorRate) #set($allBenefit = $math.mul($!&#123;totalAmount&#125;,$!&#123;userRate&#125;)) #set($superiorBenefit = $math.mul($!&#123;totalAmount&#125;,$!&#123;superiorRate&#125;)) $number.format(&quot;#0.00&quot;,$math.sub($allBenefit,$superiorBenefit))#end","tags":[{"name":"分页","slug":"分页","permalink":"http://viivlgr.github.io/tags/分页/"}]},{"title":"数组排序与乱序","date":"2017-05-04T10:13:40.000Z","path":"2017/05/04/数组排序与乱序/","text":"一、规则排序sort()方法在默认情况下按照升序排列数组项—即从小到大排序，为了实现排序，sort()方法会调用每一项的toString()转型方法，来比较得到的字符串，以确定如何排序。即使数组中每一项都是数值，sort()比较的也是字符串。 123var values = [0, 1, 5, 10, 15];values.sort();alert(values); //0,1,10,15,5 所以想要比较数值的时候，单单使用sort()方法是不准确的，我们需要一个比较函数作为sort()的参数。 12345var values = [0, 1, 5, 10, 15];values.sort(function(prev,next)&#123; return prev-next;&#125;);alert(values); // 0,1,5,10,15 想要反转数组的顺序只需要执行reserve()方法即可。 乱序乱序的话需要对sort()中的比较函数返回值做一些操作，让返回值随即为正（升序）、负（降序）; 12345678var values = [0, 1, 5, 10, 15];values.sort(function(prev,next)&#123; //因为Math.random产生的数在0-1之间 //所以0.5两边的概率是相等的 //大于0.5时为升序，小于0.5时为降序 return Math.random() - 0.5;&#125;);alert(values);","tags":[{"name":"数组","slug":"数组","permalink":"http://viivlgr.github.io/tags/数组/"}]},{"title":"velocity的简单用法","date":"2017-05-04T09:53:32.000Z","path":"2017/05/04/velocity的简单用法/","text":"使用Velocity Tools的时候，一定要在toolbox.xml中指定，然后在应用的web.xml中配置。 关于date，如下所示：函数举例显示结果 123456789101112131415$date 2008-04-22 $date.long 2008年4月22日 下午10时58分54秒 $date.medium_time 22:58:54 $date.full_date 2008年4月22日 星期二 $date.yyyy 2008 $date.get(&apos;default&apos;,&apos;short&apos;) 2008-4-22 下午10:58 $date.get(&apos;yyyy-M-d H:m:s&apos;) 2008-4-22 22:58:54 $date.whenIs(&apos;2008-04-20&apos;) 2 days 22 hours ago $date.whenIs(&apos;2008-04-20&apos;).full 2 days 22 hours 58 minutes 54 seconds 484 milliseconds ago $date.whenIs(&apos;2008-04-20&apos;).days -2 $date.whenIs(&apos;2008-04-20&apos;) 22 hours 58 minutes ago $date.whenIs(&apos;2008-04-20&apos;,&apos;2008-04-20&apos;) same time$date.difference(&apos;2008-04-20&apos;, &apos;2008-04-20&apos;) 2 days$date.whenIs(&apos;2008-04-20&apos;).days -2 关于math，如下所示：函数举例显示结果 123456789101112131415161718$math.add(&quot;10&quot;,&quot;4&quot;) 14 $math.sub(&quot;100&quot;,&quot;20&quot;) 80 $math.mul(&quot;11&quot;,&quot;7&quot;) 77 $math.div(&quot;100&quot;,&quot;5&quot;) 20 $math.idiv(&quot;100&quot;,&quot;5&quot;) 20 $math.pow(&quot;2&quot;,&quot;5&quot;) 32 $math.mod(&quot;13&quot;,&quot;5&quot;) 3 $math.max(&quot;99&quot;,&quot;16&quot;) 99 $math.min(&quot;99&quot;,&quot;16&quot;) 16 $math.abs(&quot;-99&quot;) 99 $math.cell(&quot;99.26&quot;) $math.cell(&quot;99.26&quot;) $math.floor(&quot;99.26&quot;) 99 $math.random 0.7663665545444911 $math.random(&quot;1&quot;,&quot;10&quot;) 2 $math.roundTo(&quot;2&quot;,&quot;5&quot;) 5.0 $math.toInteger(&quot;15&quot;) 15 $math.toDouble(&quot;15&quot;) 15.0 $math.toNumber(&quot;15&quot;) 15 关于number，如下所示：函数举例显示结果 12345678$number org.apache.velocity.tools.generic.NumberTool@32c41c$number.currency(&quot;35&quot;) ￥35.00 $number.format #0.0 $number.locale zh_CN $number.format(&quot;35&quot;) 35.0 $number.integer(&quot;35.47&quot;) 35 $number.number(&quot;35.47&quot;) 35.47 $number.percent(&quot;0.3547&quot;) 35% $number.toNumber(&quot;35.47&quot;) 35.47 关于sorter，如下所示：函数举例显示结果 12$sorter.sort([&apos;d&apos;,&apos;a&apos;,&apos;b&apos;,&apos;c&apos;]) [a, b, c, d] $sorter.sort([5,1,12,3]) [1, 3, 5, 12] sorter工具，可以对指定的集合进行排序，如List，Array，Map等等。 关于esc，如下所示：函数举例显示结果 123456789101112131415161718192021222324252627$esc org.apache.velocity.tools.generic.EscapeTool@e09a07 $esc.b \\ $esc.backslash \\ $esc.d $ $esc.dollar $ $esc.e ! $esc.exclamation ! $esc.h # $esc.hash # $esc.q &quot; $esc.quote &quot; \\esc.s esc.s $esc.singleQuote &apos; $esc.html(&quot;$esc.backslash&quot;) \\ $esc.url(&quot;shirdrn.org/users/index.vm?id=1&amp;name=异域王者&quot;) shirdrn.org%2Fusers%2Findex.vm%3Fid%3D1%26name%3D%E5%BC%82%E5%9F%9F%E7%8E%8B%E8%80%85 $esc.sql(&quot;SELECT * FROM PERSON WHERE ID=&apos;2008042319831&apos;&quot;) SELECT * FROM PERSON WHERE ID=&apos;&apos;2008042319831&apos;&apos; \\$esc.java() [说明]Escapes the characters in a String using Java String rules. \\$esc.javascript() [说明]Escapes the characters in a String using JavaScript String rules. \\$esc.xml() [说明]Escapes the characters in a String using XML entities. \\$esc.propertyKey() [说明]Escapes the characters in a String using java.util.Properties rules for escaping keys. \\$esc.propertyValue() [说明]Escapes the characters in a String using java.util.Properties rules for escaping values. 参考：Velocity中的ComparisonDateTool、MathTool、NumberToo…","tags":[{"name":"简单操作","slug":"简单操作","permalink":"http://viivlgr.github.io/tags/简单操作/"}]},{"title":"hexo发布文章简易步骤","date":"2017-05-04T09:45:17.000Z","path":"2017/05/04/publicText/","text":"hexo简单操作 详细建立基于GitHub的hexo博客请查看我发布在知乎上面的文章关于搭建一个基于GitHub的hexo博客 新建 hello 文件1$ hexo new &apos;hello&apos; 打开 hello.md 文件编辑1234567891011121314title: hellodate: 2017-03-29 22:37:23categories: - 日志 - 二级目录tags: - hello---摘要部分&lt;!--more--&gt;正文部分 发布博客1$ hexo d -g","tags":[{"name":"发布文章","slug":"发布文章","permalink":"http://viivlgr.github.io/tags/发布文章/"}]},{"title":"jsonp","date":"2017-05-04T09:06:28.000Z","path":"2017/05/04/jsonp/","text":"参考：轻松搞定JSONP跨域请求参考：JavaScript 跨域总结与解决办法&amp;version=12020510&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=RBWQ%2BryWlU3B%2FMZnILchEGXaFr0LZOqQqXF1pghzJA2zCFx6uqWXuR1ObQWRc5R2)要理解跨域，先要了解一下“同源策略”。 所谓同源是指，域名，协议，端口相同。简单的说就是基于安全考虑，当前域不能访问其他域的东西。 什么是跨域 JavaScript出于安全方面的考虑，不允许跨域调用其他页面的对象。但在安全限制的同时也给注入iframe或是ajax应用上带来了不少麻烦。 网上一张列举跨域的详细清单： URL 说明 是否允许通信 http://www.a.com/a.js http://www.a.com/b.js 同一域名下 允许 http://www.a.com/lib/a.js http://www.a.com/script/b.js 同一域名下不同文件夹 允许 http://www.a.com:8080/a.js http://www.a.com/b.js 同一域名，不同端口 不允许 http://www.a.com/a.js https://www.a.com/b.js 同一域名，不同协议 不允许 http://www.a.com/a.js http://70.32.92.74/b.js 域名和域名对应IP 不允许 http://www.a.com/a.js http://script.a.com/b.js 主域相同，子域不同 不允许 http://www.a.com/a.js http://a.com/b.js 同一域名，不同二级域名 (同上) 不允许（cookie这种情况下也不允许访问） http://www.cnblogs.com/a.js http://www.a.com/b.js 不同域名 不允许 有两点要特别注意： 如果是协议和端口造成的跨域问题“前台”是无能为力的 在跨域问题上，域仅仅是通过“URL的首部”来识别而不会去尝试判断相同的ip地址对应着两个域或两个域是否在同一个ip上。 “URL的首部”指window.location.protocol +window.location.host，也可以理解为“Domains, protocols and ports must match”。 拿豆瓣的api简单尝试一下跨域请求出现的问题。12345678910111213141516 window.onload = function()&#123; var oBtn = document.getElementById('btn'); oBtn.onclick = function()&#123; var xhr = new XMLHttpRequest(); xhr.onreadystatechange = function()&#123; if(xhr.readyState == 4 &amp;&amp; xhr.status == 200)&#123; console.log(xhr.responseText); &#125; &#125; // No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'null' is therefore not allowed access. xhr.open('get','https://api.douban.com/v2/book/search?q=javascript&amp;count=1',true); xhr.send(); &#125;&#125; 浏览器会报出上面的错误 ，请求资源上不存在“访问控制允许源”标头。 JSONP 是 JSON with padding（填充式 JSON 或参数式 JSON）的简写 我们知道，&lt;img&gt;的src（获取图片），&lt;link&gt;的href（获取css），&lt;script&gt;的src（获取javascript）这三个都不符合同源策略，它们可以跨域获取数据。 这里要介绍的JSONP就是利用 &lt;script&gt; 的src来实现跨域获取数据的。 实现跨域的原理就是动态生成&lt;script&gt;标签，然后利用&lt;script&gt;的src不受同源策略约束来跨域获取数据。 123456789101112131415 function handleResponse(response)&#123; console.log(response);&#125;window.onload = function()&#123; var oBtn = document.getElementById('btn'); oBtn.onclick = function()&#123; // 动态生成script标签，将请求路径赋给src，然后放到文档中 var script = document.createElement('script'); script.src = 'https://api.douban.com/v2/book/search?q=javascript&amp;count=1&amp;callback=handleResponse'; document.body.insertBefore(script,document.body.firstChild); &#125;&#125; 使用jquery的封装好的jsonp来实现跨域12345678910111213141516$.ajax(&#123; async: true, url: 'https://api.douban.com/v2/book/search', type: 'GET', dataType: 'jsonp', //返回的数据类型，设置为jsonp方式 jsonp: 'callback', // 指定一个查询参数名称来覆盖默认的jsonp回调参数 callback jsonpCallback: 'handleResponse', // 设置回调函数名 data: &#123; q: 'javascript', count: 1 &#125;, success: function(response,status,xhr)&#123; console.log('状态为：'+status+'状态是：'+xhr.statusText); console.log(response); &#125;&#125;) 使用$.getJSON来实现跨域12345678$.getJSON('https://api.douban.com/v2/book/search?callback=?',&#123; q: 'javascript', count: 1&#125;,function(response,status,xhr)&#123; console.log('状态为：'+status+'状态是：'+xhr.statusText); console.log(response);&#125;) document.domain+iframe的设置对于主域相同而子域不同的例子，可以通过设置document.domain的办法来解决。 具体的做法是可以在http://www.a.com/a.html和http://script.a.com/b.html两个文件中分别加上 document.domain = ‘a.com’；然后通过a.html文件中创建一个iframe，去控制iframe的contentDocument，这样两个js文件之间就可以 “交互”了。当然这种办法只能解决主域相同而二级域名不同的情况，如果你异想天开的把script.a.com的domian设为alibaba.com 那显然是会报错地！代码如下： 123456789101112// www.a.com上的a.htmldocument.domain = &apos;a.com&apos;;var ifr = document.createElement(&apos;iframe&apos;);ifr.src = &apos;http://script.a.com/b.html&apos;;ifr.style.display = &apos;none&apos;;document.body.appendChild(ifr);ifr.onload = function()&#123; var doc = ifr.contentDocument || ifr.contentWindow.document; // 在这里操纵b.html alert(doc.getElementsByTagName(&quot;h1&quot;)[0].childNodes[0].nodeValue);&#125;; 123// script.a.com上的b.htmldocument.domain = &apos;a.com&apos;; 这种方式适用于www.kuqin.com, kuqin.com, script.kuqin.com, css.kuqin.com中的任何页面相互通信。 备注： 某一页面的domain默认等于window.location.hostname。 主域名是不带www的域名，例如a.com， 主域名前面带前缀的通常都为二级域名或多级域名，例如www.a.com其实是二级域名。 domain只能设置为主域名，不可以在b.a.com中将domain设置为c.a.com。 问题： 安全性，当一个站点（b.a.com）被攻击后，另一个站点（c.a.com）会引起安全漏洞。 如果一个页面中引入多个iframe，要想能够操作所有iframe，必须都得设置相同domain。","tags":[{"name":"jquery","slug":"jquery","permalink":"http://viivlgr.github.io/tags/jquery/"}]},{"title":"学习使用markdown语法","date":"2017-03-29T17:57:41.000Z","path":"2017/03/30/learn-markdown/","text":"开启markdown记录之路~ 一级标题二级标题三级标题四级标题五级标题六级标题无序列表 列表1 列表1.1 列表1.2 列表2 列表3 有序列表 列表1 列表1.1 列表1.2 列表2 列表3 引用 记录，成为更好的自己 粗体和斜体这是斜体这是粗体 链接与图片我的博客 分割线这是第一段内容 这是第二段内容 代码高亮123function()&#123; &#125; 制作待办事项TODOlist [x] 已完成项目1 [x] 已完成事项1 [ ] 待办事项2 [ ] 待办项目2 [ ] 待办项目3 流程图123456graph TD A[Christmas] --&gt;B(Go shopping) B --&gt; C&#123;let me think&#125; C --&gt; |One| D[laptop] C --&gt; |Two| E[iphone] C --&gt; |Three| F[Car] 序列图12345sequenceDiagram loop every day Alice -&gt;&gt; John:Hello John,how are you? John--&gt;&gt;Alice:Great! end 甘特图123456789ganttdateFormat YYYY-MM-DDtitle 产品设计表section 初期阶段明确需求:2016-03-01,10dsection 中期阶段跟进开发:2016-03-11,15dsection 后期阶段走查测试:2016-03-20,9d 表格 Item Value Qty Computer 1600 USD 5 Phone 12 USD 12 Pipe 1 USD 234","tags":[{"name":"工具","slug":"工具","permalink":"http://viivlgr.github.io/tags/工具/"}]},{"title":"我的博客终于出生啦~","date":"2017-03-29T16:56:41.000Z","path":"2017/03/30/build-hexo-and-change-theme/","text":"属于viivlgr的博客出生记~ 特别感谢HJM的分享 搭建hexo及替换主题","tags":[{"name":"first commit","slug":"first-commit","permalink":"http://viivlgr.github.io/tags/first-commit/"}]},{"title":"Hello World","date":"2017-03-28T18:08:10.000Z","path":"2017/03/29/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]